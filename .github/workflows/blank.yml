name: CI

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip -DestinationPath ngrok

    - name: Auth ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Start ngrok tunnel
      run: Start-Process -NoNewWindow -FilePath .\ngrok\ngrok.exe -ArgumentList "tcp 3389" -PassThru -Wait -RedirectStandardOutput ngrok.log

    - name: Wait for ngrok to start
      run: Start-Sleep -Seconds 10

    - name: Fetch ngrok public address
      run: |
        $attempts = 0
        $maxAttempts = 5
        $publicAddress = $null
        while ($attempts -lt $maxAttempts) {
          try {
            $ngrokStatus = Invoke-RestMethod -Uri http://localhost:4040/api/tunnels
            if ($ngrokStatus.tunnels.Count -gt 0) {
              $publicAddress = $ngrokStatus.tunnels[0].public_url
              Write-Output "Ngrok Tunnel Public Address: $publicAddress"
              break
            }
          } catch {
            Write-Output "Failed to retrieve ngrok public address. Attempt $($attempts + 1) of $maxAttempts."
            Write-Output "Error details: $_"
          }
          $attempts++
          Start-Sleep -Seconds 5
        }
        if (-not $publicAddress) {
          Write-Error "Failed to retrieve ngrok public address after $maxAttempts attempts."
        }
      shell: pwsh

    - name: Display ngrok log
      run: |
        $ngrokLog = Get-Content -Path ngrok.log
        Write-Output "Ngrok Log:"
        Write-Output $ngrokLog
